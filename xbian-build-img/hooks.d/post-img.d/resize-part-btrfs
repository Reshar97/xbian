[ "$config_fstype_root" = btrfs ] || return 0

rootpart=2
if [ -z $config_fstype_boot ]; then
    rootpart=1;
fi

loopd=$(kpartx -s -l $IMGNAME -av | tail -1 | awk '{print $3}'); loopd=${loopd%%p?}
mount -t btrfs /dev/mapper/${loopd}p${rootpart} ./rootfs
btrfs fi sync ./rootfs
dmesg -C

while btrfs fi resize -50M ./rootfs >/dev/null 2>&1; do
    while ! dmesg | grep -i btrfs | grep -qi "new size" ; do sleep 5; done
    btrfs fi sync ./rootfs >/dev/null 2>&1
    dmesg -C
done

btrfs fi resize +10M ./rootfs >/dev/null
while ! dmesg | grep -i btrfs | grep -qi "new size" ; do sleep 5; done

btrfs dev scan >/dev/null 2>&1
df -h ./rootfs
btrfs fi df ./rootfs
umount ./rootfs; sync

newpartsize=$(dmesg | grep -i "new size" | grep "/dev/mapper/${loopd}p${rootpart}\|/dev/dm" | tail -1 | awk '{print $NF}')
newpartsize=$((newpartsize/512+64))
kpartx -dv $IMGNAME
echo ",$newpartsize,,," | sfdisk -u S -N${rootpart} -H 4 -S 16 -q $IMGNAME > /dev/null 2>&1; sync

newimgsize=$((newpartsize+141312))
dd if=$IMGNAME of=$IMGNAME.new bs=512 count=$newimgsize
mv $IMGNAME.new $IMGNAME; sync

